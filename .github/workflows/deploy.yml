---
name: 🚀 Deploy

"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  yaml-changes:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      gaw: ${{ steps.filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v4
      - name: Get registration token
        id: getRegToken
        run: |
          curl -X POST -H \"Accept: application/vnd.github.v3+json\" \
          -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
          https://api.github.com/repos/myprofile/myrepo/actions/runners/registration-token
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          token: ${{ steps.getRegToken.outputs.value }}
          filters: |
            workflows:
              - '.github/workflows/**'

  yaml-lint:
    name: Yaml lint
    # runs-on: ubuntu-latest
    needs: [yaml-changes]
    if: ${{ needs.yaml-changes.outputs.gaw == 'true' }}
    uses: ./.github/workflows/yaml-validation.yml
    with:
      os: "ubuntu-latest"
      node_version: "20"

  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 18

      - name: 📥 Install deps
        run: npm install

      - name: ⚡ Run vitest
        run: |
            skip_tests=""
            if [[ -z "${{ env.SKIP_TESTS }}" ]]; then
              skip_tests="--passWithNoTests"
            fi
            npm run test:ci -- --coverage --coverageReporters="text-summary" \
            "${skip_tests}" >> $GITHUB_STEP_SUMMARY

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [yaml-lint, lint, typecheck, vitest]
    # only deploy main/dev branch on pushes
    if: ${{ (github.ref == 'refs/heads/main') && github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
      - name: deploy here
        run: echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY
